generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Branch {
  MATEMATIK
  TURKCE
  FEN_BILGISI
  SOSYAL_BILGILER
  INGILIZCE
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
}

// Öğretmen tablosu
model Teacher {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  tcNo       String   @unique
  password   String
  name       String
  surname    String
  email      String
  branch     Branch // Öğretmen branşı
  role       Role     @default(TEACHER) // Role alanı eklendi
  phone      String
  experience Int? // Deneyim yılı
  isActive   Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

// Öğrenci tablosu
model Student {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  tcNo          String   @unique
  password      String
  name          String
  surname       String
  role          Role     @default(STUDENT) // Role alanı eklendi
  studentNumber String?
  grade         Int? // Sınıf seviyesi
  classroom     String? // Şube bilgisi
  parentName    String
  parentPhone   String
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

// Admin tablosu
model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  role      Role     @default(ADMIN) // Role alanı eklendi
  updatedAt DateTime @updatedAt
}

// RecentOrders.jsx -> Yeni icerik ekleme/duzenleme modalı icin
model Content {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  title              String
  type               String // İçerik Türü (Video, PDF, Sunum, Etkileşimli, Test)
  branch             Branch // ders bilgisi
  ageGroup           String
  grade              Int? // Sınıf seviyesi (1, 2, 3, ...)
  classroom          String? // Şube bilgisi (A, B, C, ...)
  parentName         String? // Veli adı
  parentPhone        String? // Veli telefon numarası
  publishDateStudent DateTime?
  publishDateTeacher DateTime?
  endDateStudent     DateTime?
  endDateTeacher     DateTime?
  isActive           Boolean   @default(true) // Katılım Durumu
  fileUrl            String? // İçerik Dosyası (URL olarak saklanır)
  description        String?
  tags               String[]
  updatedAt          DateTime?
  createdAt          DateTime? @default(now())
}

// Adminin Todo listi
model Task {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  dueDate     String
  priority    String
  status      String
  createdAt   DateTime @default(now()) // Opsiyonel olarak değiştirildi
  updatedAt   DateTime // Opsiyonel olarak değiştirildi
}

model AccessSettings {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  studentDays Int
  teacherDays Int
  updatedAt   DateTime @updatedAt
}
