generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Branch {
  MATEMATIK
  TURKCE
  FEN_BILGISI
  SOSYAL_BILGILER
  INGILIZCE
  DRAFT
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
}

// Öğretmen tablosu
model Teacher {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  tcNo       String   @unique
  password   String
  name       String
  surname    String
  email      String
  branch     Branch // Öğretmen branşı
  role       Role     @default(TEACHER) // Role alanı eklendi
  phone      String
  experience Int? // Deneyim yılı
  isActive   Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

// Öğrenci tablosu
model Student {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  tcNo          String   @unique
  password      String
  name          String
  surname       String
  role          Role     @default(STUDENT) // Role alanı eklendi
  studentNumber String?
  grade         Int? // Sınıf seviyesi
  classroom     String? // Şube bilgisi
  parentName    String
  parentPhone   String
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

// Admin tablosu
model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  role      Role     @default(ADMIN) // Role alanı eklendi
  updatedAt DateTime @updatedAt
}

// RecentOrders.jsx -> Yeni icerik ekleme/duzenleme modalı icin
model Content {
  id                     String    @id @default(auto()) @map("_id") @db.ObjectId
  title                  String? // İçerik Başlığı  
  type                   String? // İçerik Türü (Video, PDF, Sunum, Etkileşimli, Test)
  branch                 Branch? // ders bilgisi
  ageGroup               String? // Yaş Grubu (3-6 Yaş, 7-10 Yaş, 11-14 Yaş, 15-18 Yaş)
  publishDateStudent     DateTime? // Öğrenci yayın tarihi
  publishDateTeacher     DateTime? // Öğretmen yayın tarihi  
  endDateStudent         DateTime? // Öğrenci bitiş tarihi
  endDateTeacher         DateTime? // Öğretmen bitiş tarihi
  isActive               Boolean   @default(true)
  fileUrl                String? // İçerik Dosyası URL'i
  description            String? // İçerik Açıklaması
  tags                   String[] // Etiketler
  updatedAt              DateTime? // Güncellenme tarihi
  createdAt              DateTime? @default(now())
  isPublished            Boolean?  @default(false)
  isWeeklyContent        Boolean?  @default(false)
  isExtra                Boolean?  @default(false)
  isCompleted            Boolean?  @default(false)
  weeklyContentStartDate DateTime?
  weeklyContentEndDate   DateTime?
}

// Adminin Todo listi
model Task {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  dueDate     String
  priority    String
  status      String
  createdAt   DateTime  @default(now()) // Opsiyonel olarak değiştirildi
  updatedAt   DateTime? @updatedAt // Opsiyonel olarak değiştirildi
}

model AccessSettings {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  studentDays Int
  teacherDays Int
  updatedAt   DateTime @updatedAt
}
