generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


enum Role {
  ADMIN
  TEACHER
  STUDENT
}

enum Visibility {
  STUDENT
  TEACHER
  BOTH
}

enum FeedbackStatus {
  PENDING       // İnceleme Bekliyor
  REVIEWED      // Değerlendirildi
  APPROVED      // Onaylandı
  REJECTED      // Reddedildi
}

model User {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  email       String       @unique
  password    String
  name        String
  role        Role
  teacherInfo TeacherInfo?
  feedbacks   Feedback[]   @relation("TeacherFeedbacks")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model TeacherInfo {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  user   User     @relation(fields: [userId], references: [id])
  userId String   @unique @db.ObjectId
  branch String
}

model Content {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description  String?
  ageGroup     String
  subject      String
  contentUrl   String
  activeFrom   DateTime
  activeUntil  DateTime
  visibility   Visibility
  createdBy    String
  feedbacks    Feedback[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Feedback {
  id          String         @id @default(auto()) @map("_id") @db.ObjectId
  teacher     User           @relation("TeacherFeedbacks", fields: [teacherId], references: [id])
  teacherId   String         @db.ObjectId
  content     Content        @relation(fields: [contentId], references: [id])
  contentId   String         @db.ObjectId
  message     String
  status      FeedbackStatus @default(PENDING)
  adminReply  String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}
